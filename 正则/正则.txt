正则  -- 工具
匹配字符串

校验 -- 安全性
采集数据

-------------



/\.(jpg|png|gif)/i  //i忽略 大小写

定界符  --  //
search
i忽略大小写

match

let str = 'adsf456a4df56ads56f46adf adf46';
let reg=/\d/g;
alert(str.match(reg))

g 全局匹配
量词：
+ 贪婪模式 1-多   let reg=/\d+/g;
* 贪婪 0-多
{n}

replace 

let str = 'adsf456a4df56ads56f46adf adf46';
let reg=/\d/g;
str.replace(/a/gi,'*');
---------------------------------
元字符 []
1 任意一个字符
 /[a[abv]q/   aaq abq avq

2 范围(任意一个)
    /[0-9]/
    /[a-z]/i
    /[a-z0-9]/

 ：3-50
 [3-9]|[1-4][0-9]]

3 排除
[^a-z] 不在a-z范围

转义：
\d  [0-9]
\w  [a-z0-9]
\s  空白

\D  非 
\W  非
\S  非
. 任意字符  /a.{5,18}z/  a开头 中间任意字符5-18个 z结尾

量词：
{n}  /a{6}/  /\d{11}/   //多少个 /1\d{10}/

{n,m}  /\d{5,12}/   //数量范围
{n,}  n到无穷

+ {1,}    //1到多
? {0,1}   //有或没有   /\.jsx?/  有或者没有


--------------------------------------
修饰符 =》说明条件的
^ 放在[]里面排除 不在的话 就是行首
$ 行尾



